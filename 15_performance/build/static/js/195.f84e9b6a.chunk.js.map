{"version":3,"file":"static/js/195.f84e9b6a.chunk.js","mappings":"4KAGA,MAIMA,EAHG,IAAIC,MAGwB,KAHbC,KAAK,MAAMC,KAAI,CAACC,EAAMC,IAAK,QAAAC,OAAaD,KAKhE,MAiCA,EAjCgBE,KAEd,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IASrCC,EAAgBX,EACrBY,QAAQR,GACW,KAAdI,GACGJ,EAAKS,SAASL,KAEtBL,KAAKC,IACJU,EAAAA,EAAAA,KAAA,MAAAC,SAAgBX,GAAPA,KAGLY,GAAgBC,EAAAA,EAAAA,kBAAiBN,GAEvC,OACEO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAJ,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOM,KAAK,OAAOC,SApBAC,IAIrBb,EAAaa,EAAEC,OAAOC,MAAM,KAkB1BV,EAAAA,EAAAA,KAAA,MAAAC,SACGC,MAEF,C","sources":["070_useDeferredValue/end/Example.js"],"sourcesContent":["// POINT [Concurrent Mode]useDeferedValueでユーザビリティを向上\r\nimport { useState, useTransition, useDeferredValue } from \"react\";\r\n\r\nconst generateDummyItem = (num) => {\r\n  return new Array(num).fill(null).map((item, index) => `item ${index}`);\r\n};\r\n\r\nconst dummyItems = generateDummyItem(10000);\r\n\r\nconst Example = () => {\r\n  // const [isPending, startTransition] = useTransition();\r\n  const [filterVal, setFilterVal] = useState(\"\");\r\n\r\n  const changeHandler = (e) => {\r\n    // startTransition(() => {\r\n    //   setFilterVal(e.target.value);\r\n    // });\r\n    setFilterVal(e.target.value);\r\n  };\r\n\r\n  const filteredItems = dummyItems\r\n  .filter((item) => {\r\n    if (filterVal === \"\") return true;\r\n    return item.includes(filterVal);\r\n  })\r\n  .map((item) => (\r\n    <li key={item}>{item}</li>\r\n  ));\r\n\r\n  const deferredItems = useDeferredValue(filteredItems)\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text\" onChange={changeHandler} />\r\n      {/* {isPending && <div>Loading...</div>} */}\r\n      <ul>\r\n        {deferredItems}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"names":["dummyItems","Array","fill","map","item","index","concat","Example","filterVal","setFilterVal","useState","filteredItems","filter","includes","_jsx","children","deferredItems","useDeferredValue","_jsxs","_Fragment","type","onChange","e","target","value"],"sourceRoot":""}